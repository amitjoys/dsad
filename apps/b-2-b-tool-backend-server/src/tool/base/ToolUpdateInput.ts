/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { CategoryWhereUniqueInput } from "../../category/base/CategoryWhereUniqueInput";
import {
  ValidateNested,
  IsOptional,
  IsString,
  MaxLength,
  IsBoolean,
  IsEnum,
} from "class-validator";
import { Type } from "class-transformer";
import { IsJSONValue } from "../../validators";
import { GraphQLJSON } from "graphql-type-json";
import { InputJsonValue } from "../../types";
import { RatingUpdateManyWithoutToolsInput } from "./RatingUpdateManyWithoutToolsInput";
import { ReviewUpdateManyWithoutToolsInput } from "./ReviewUpdateManyWithoutToolsInput";
import { EnumToolStatus } from "./EnumToolStatus";
import { SubcategoryWhereUniqueInput } from "../../subcategory/base/SubcategoryWhereUniqueInput";

@InputType()
class ToolUpdateInput {
  @ApiProperty({
    required: false,
    type: () => CategoryWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => CategoryWhereUniqueInput)
  @IsOptional()
  @Field(() => CategoryWhereUniqueInput, {
    nullable: true,
  })
  category?: CategoryWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  createdBy?: string | null;

  @ApiProperty({
    required: false,
  })
  @IsJSONValue()
  @IsOptional()
  @Field(() => GraphQLJSON, {
    nullable: true,
  })
  csvUploadFile?: InputJsonValue;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  description?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  features?: string | null;

  @ApiProperty({
    required: false,
    type: Boolean,
  })
  @IsBoolean()
  @IsOptional()
  @Field(() => Boolean, {
    nullable: true,
  })
  isFeatured?: boolean | null;

  @ApiProperty({
    required: false,
  })
  @IsJSONValue()
  @IsOptional()
  @Field(() => GraphQLJSON, {
    nullable: true,
  })
  logo?: InputJsonValue;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  name?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  pricingDetails?: string | null;

  @ApiProperty({
    required: false,
    type: () => RatingUpdateManyWithoutToolsInput,
  })
  @ValidateNested()
  @Type(() => RatingUpdateManyWithoutToolsInput)
  @IsOptional()
  @Field(() => RatingUpdateManyWithoutToolsInput, {
    nullable: true,
  })
  ratings?: RatingUpdateManyWithoutToolsInput;

  @ApiProperty({
    required: false,
    type: () => ReviewUpdateManyWithoutToolsInput,
  })
  @ValidateNested()
  @Type(() => ReviewUpdateManyWithoutToolsInput)
  @IsOptional()
  @Field(() => ReviewUpdateManyWithoutToolsInput, {
    nullable: true,
  })
  reviews?: ReviewUpdateManyWithoutToolsInput;

  @ApiProperty({
    required: false,
    enum: EnumToolStatus,
  })
  @IsEnum(EnumToolStatus)
  @IsOptional()
  @Field(() => EnumToolStatus, {
    nullable: true,
  })
  status?: "Option1" | null;

  @ApiProperty({
    required: false,
    type: () => SubcategoryWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => SubcategoryWhereUniqueInput)
  @IsOptional()
  @Field(() => SubcategoryWhereUniqueInput, {
    nullable: true,
  })
  subcategory?: SubcategoryWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  website?: string | null;
}

export { ToolUpdateInput as ToolUpdateInput };
